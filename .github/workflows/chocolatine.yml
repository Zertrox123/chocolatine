name: chocolatine

on:
  push:
    branches_ignore:
      - "ga_ignore-*"
    pull-request:
      branches-ignore:
        - "ga-ignore-*"

env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-DOP-200-LYN-2-1-chocolatine-omar.joudi.git"
  EXECUTABLES: "mysh"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: check coding style
        uses: actions/checkout@v4
      - name: check
        run: |
          check.sh $(pwd) $(pwd)
          while read Line; \
          do \
            ARG1=$(echo $Line | cut -d: -f1); \
            ARG2=$(echo $Line | cut -d: -f2); \
            ARG3=$(echo $Line | cut -d: -f3); \
            ARG4=$(echo $Line | cut -d: -f4); \
            echo "::error file=$ARG1, line=$ARG2:: $ARG3 $ARG4"; \
          if [ -s coding-style-reports.log ]; then
            exit 0
          fi
          done < coding-style-reports.log

  check_program_compilation:
    needs: check_coding_style
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v4
      - name: compilation
        run: make
        timeout-minutes: 2
      - name: clean
        run: make clean
      - name: check exe
        run: |
          for value in $EXECUTABLES; do
            if [ -e $value ]; then
              exit 0
            else
              exit 1
            fi
          done

  run_tests:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: check
        uses: actions/checkout@v4
      - name: run tests
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          target_repo_url: ${{ env.MIRROR_URL }}